{"version":3,"file":"static/js/6.7c624b66.chunk.js","mappings":"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","sources":["components/ErrorComponent/ErrorComponent.jsx","components/LogoComponent/LogoComponent.jsx","components/ModalComponent/ModalComponent.jsx","components/SearchComponent/SearchComponent.jsx","components/SearchHighlightComponent/SearchHighlightComponent.jsx","store/actions/adminPublicNoticeActions.js","components/PublicNoticeComponents/GetPublicNotice/GetPublicNotice.jsx","views/HomeView/HomeView.jsx"],"sourcesContent":["import React from 'react';\nimport './ErrorComponent.scss';\nimport PropTypes from 'prop-types';\nimport 'animate.css';\n\nconst ErrorComponent = ({ error }) => {\n  return (\n    <div className=\" animate__animated animate__bounceInLeft\">\n      <span className=\"error-component\">{error}</span>\n    </div>\n  );\n};\n\nErrorComponent.propTypes = {\n  error: PropTypes.string,\n};\nexport default ErrorComponent;\n","import './LogoComponent.scss';\nimport logo from '../../assets/club-manager-logo.png';\n\nconst LogoComponent = () => {\n  return (\n    <>\n      <div className=\"logo-wrapper\">\n        <img src={logo} alt=\"logo\" className=\"logo-image\" />\n        <div>\n          <span className=\"logo-main-text\">Anorthosis</span>\n          <div className=\"logo-secondary-text\">Football Academy</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LogoComponent;\n","import React, { useState } from 'react';\nimport LogoComponent from '../LogoComponent/LogoComponent';\nimport './ModalComponent.scss';\nimport { FaRegWindowClose } from 'react-icons/fa';\n\nconst ModalComponent = ({\n  openButtonTitle,\n  closeButtonTitle,\n  props,\n  variant,\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n  return (\n    <>\n      {showModal ? (\n        <div>\n          <div\n            title=\"Close\"\n            className={showModal ? 'modal-overlay' : null}\n            onClick={() => setShowModal(false)}\n          />\n          <div className=\"modal-wrapper\">\n            <div className=\"modal-inner-wrapper\">\n              <LogoComponent />\n\n              <span\n                onClick={() => setShowModal(false)}\n                className=\"confirmation\"\n              >\n                <FaRegWindowClose className=\"ra-thumbs-down\" />\n              </span>\n            </div>\n            {props}\n          </div>\n        </div>\n      ) : null}\n      <button\n        type=\"button\"\n        onClick={handleShowModal}\n        className={`${variant} modal-btn`}\n      >\n        <span className=\"modal-title\">{openButtonTitle}</span>\n      </button>\n    </>\n  );\n};\n\nexport default ModalComponent;\n","import { useRef } from 'react';\nimport './SearchComponent.scss';\nimport PropTypes from 'prop-types';\n\nconst SearchComponent = ({\n  type,\n  placeholder,\n  onChange,\n  className,\n  value,\n  quantity,\n  total,\n}) => {\n  const inputRef = useRef(null);\n  const checkFocus = () => {\n    inputRef.current.focus();\n  };\n\n  return (\n    <>\n      <div className=\"search-input-wrapper\">\n        <input\n          ref={inputRef}\n          type={type}\n          className={className}\n          placeholder={placeholder}\n          onChange={onChange}\n          value={value}\n          multiple\n          required\n          onClick={checkFocus}\n        />\n        <p>\n          {inputRef.current\n            ? `Your search found ${quantity} out of ${total}`\n            : null}\n        </p>\n      </div>\n    </>\n  );\n};\n\nSearchComponent.defaultProps = {\n  type: 'search',\n};\n\nSearchComponent.propTypes = {\n  text: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default SearchComponent;\n","import React from 'react';\n\nconst SearchHighlightComponent = ({ value, keyword }) => {\n  const getHighlightedText = (text, keyword) => {\n    let splitWords = text.split(new RegExp(`(${keyword})`, 'gi'));\n    return splitWords.map((splitWord, index) => (\n      <span key={index}>\n        {splitWord.toLowerCase() === keyword.toLowerCase() ? (\n          <b\n            style={{\n              backgroundColor: 'rgba(245,245,245,1)',\n              color: 'rgba(51,51,51,1)',\n              paddingLeft: keyword ? '6px' : '0',\n            }}\n          >\n            {splitWord}\n          </b>\n        ) : (\n          splitWord\n        )}\n      </span>\n    ));\n  };\n  return <p>{getHighlightedText(value, keyword)}</p>;\n};\n\nexport default SearchHighlightComponent;\n","import axios from 'axios';\nimport {\n  ADMIN_CREATE_PUBLIC_NOTICE_FAILURE,\n  ADMIN_CREATE_PUBLIC_NOTICE_REQUEST,\n  ADMIN_CREATE_PUBLIC_NOTICE_SUCCESS,\n  ADMIN_DELETE_PUBLIC_NOTICE_FAILURE,\n  ADMIN_DELETE_PUBLIC_NOTICE_REQUEST,\n  ADMIN_DELETE_PUBLIC_NOTICE_SUCCESS,\n  ADMIN_EDIT_PUBLIC_NOTICE_FAILURE,\n  ADMIN_EDIT_PUBLIC_NOTICE_REQUEST,\n  ADMIN_EDIT_PUBLIC_NOTICE_SUCCESS,\n  GET_PUBLIC_NOTICE_FAILURE,\n  GET_PUBLIC_NOTICE_REQUEST,\n  GET_PUBLIC_NOTICE_SUCCESS,\n} from '../constants/adminPublicNoticeConstants';\n\n//GET: ADMIN get PLAYER profile\nexport const getPublicNoticeAction = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_PUBLIC_NOTICE_REQUEST,\n    });\n\n    const { data } = await axios.get(\n      `${process.env.REACT_APP_END_POINT}api/public-notices`,\n    );\n    dispatch({ type: GET_PUBLIC_NOTICE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: GET_PUBLIC_NOTICE_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//POST: ADMIN create Public notice POST\nexport const adminCreatePublicNoticeAction =\n  (formData) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ADMIN_CREATE_PUBLIC_NOTICE_REQUEST,\n      });\n      const {\n        userLogin: { userInfo },\n      } = getState();\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `${process.env.REACT_APP_END_POINT}api/admin/public-notice-create`,\n        formData,\n        config,\n      );\n      dispatch({ type: ADMIN_CREATE_PUBLIC_NOTICE_SUCCESS, payload: data });\n      dispatch(getPublicNoticeAction());\n    } catch (error) {\n      dispatch({\n        type: ADMIN_CREATE_PUBLIC_NOTICE_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n//PUT: ADMIN EDIT Public Notice POST\nexport const adminEditPublicNoticeAction =\n  (formData) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ADMIN_EDIT_PUBLIC_NOTICE_REQUEST,\n      });\n      const {\n        userLogin: { userInfo },\n      } = getState();\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `${process.env.REACT_APP_END_POINT}api/admin/public-notice-edit/${formData.id}`,\n        formData,\n        config,\n      );\n      dispatch({ type: ADMIN_EDIT_PUBLIC_NOTICE_SUCCESS, payload: data });\n      dispatch(getPublicNoticeAction());\n    } catch (error) {\n      dispatch({\n        type: ADMIN_EDIT_PUBLIC_NOTICE_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n//DELETE: ADMIN DELETE Public Notice POST\nexport const adminDeletePublicNoticeAction =\n  (noticeId) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ADMIN_DELETE_PUBLIC_NOTICE_REQUEST,\n      });\n      const {\n        userLogin: { userInfo },\n      } = getState();\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.delete(\n        `${process.env.REACT_APP_END_POINT}api/admin/public-notice-delete/${noticeId}`,\n        config,\n      );\n      dispatch({ type: ADMIN_DELETE_PUBLIC_NOTICE_SUCCESS, payload: data });\n      dispatch(getPublicNoticeAction());\n    } catch (error) {\n      dispatch({\n        type: ADMIN_DELETE_PUBLIC_NOTICE_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n","import { useEffect, useState } from 'react';\nimport './GetPublicNotice.scss';\nimport { FaInfoCircle } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getPublicNoticeAction } from '../../../store/actions/adminPublicNoticeActions';\n\nimport ErrorComponent from '../../ErrorComponent/ErrorComponent';\nimport SpinnerComponent from '../../Spinner/SpinnerComponent';\nimport LogoComponent from '../../LogoComponent/LogoComponent';\nimport SearchComponent from '../../SearchComponent/SearchComponent';\nimport SearchHighlightComponent from '../../SearchHighlightComponent/SearchHighlightComponent';\nimport ModalComponent from '../../ModalComponent/ModalComponent';\nimport moment from 'moment';\n\nconst GetPublicNotice = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let ignore = false;\n    if (!ignore) {\n      dispatch(getPublicNoticeAction());\n    }\n    return () => (ignore = true);\n  }, [dispatch]);\n\n  const getPublicNotice = useSelector((state) => state.getPublicNotice);\n  const { loading, error, success, notices } = getPublicNotice;\n\n  // Search notices\n  const [keyword, setKeyword] = useState('');\n  const handleSearch = (e) => {\n    setKeyword(e.target.value);\n  };\n  const searchedNotices = notices?.filter((post) => {\n    if (\n      post.heading.toLowerCase().includes(keyword.toLowerCase()) ||\n      post.post.toLowerCase().includes(keyword.toLowerCase())\n    ) {\n      return post;\n    }\n    return false;\n  });\n\n  return (\n    <>\n      {loading ? (\n        <SpinnerComponent />\n      ) : success && searchedNotices ? (\n        <>\n          <SearchComponent\n            placeholder=\"SEARCH A TITLE\"\n            value={keyword}\n            onChange={handleSearch}\n            quantity={searchedNotices?.length}\n            total={notices?.length}\n          />\n\n          <div className=\"wrapper\">\n            {searchedNotices.map((notice) => (\n              <div key={notice?._id} className=\"inner-content-wrapper\">\n                <fieldset className=\"fieldSet\">\n                  <legend>\n                    {' '}\n                    <SearchHighlightComponent\n                      value={notice?.heading}\n                      keyword={keyword}\n                    />\n                  </legend>\n                  <LogoComponent />\n\n                  <div className=\"search-model-wrapper\" title=\"read more\">\n                    <SearchHighlightComponent\n                      value={notice?.post.slice(0, 40) + '...'}\n                      keyword={keyword}\n                    />\n\n                    <ModalComponent\n                      className=\"modal-btn\"\n                      openButtonTitle={<FaInfoCircle id=\"read-more-modal\" />}\n                      closeButtonTitle=\"Close\"\n                      variant=\"info\"\n                      props={\n                        <>\n                          <h3>{notice.heading}</h3>\n                          <p className=\"small-text\">Post by: {notice.name}</p>\n                          <SearchHighlightComponent\n                            value={notice.post}\n                            keyword={keyword}\n                          />\n\n                          <div className=\"dates-wrapper\">\n                            <p>\n                              {' '}\n                              Created: {moment(notice.createdAt).fromNow()}\n                            </p>\n                            <p>\n                              {' '}\n                              Updated: {moment(notice.updatedAt).fromNow()}\n                            </p>\n                          </div>\n                        </>\n                      }\n                    />\n                  </div>\n                  <p className=\"small-text\">Post by: {notice.name}</p>\n                  <div className=\"dates-wrapper\">\n                    <p> Created: {moment(notice.createdAt).fromNow()}</p>\n                    <p> Updated: {moment(notice.updatedAt).fromNow()}</p>\n                  </div>\n                </fieldset>\n              </div>\n            ))}\n          </div>\n        </>\n      ) : error ? (\n        <ErrorComponent error={error} />\n      ) : null}\n    </>\n  );\n};\n\nexport default GetPublicNotice;\n","import './HomeView.scss';\nimport GetPublicNotice from '../../components/PublicNoticeComponents/GetPublicNotice/GetPublicNotice';\n\nconst HomeView = () => {\n  return <GetPublicNotice />;\n};\n\nexport default HomeView;\n"],"names":["error","className","src","logo","alt","openButtonTitle","props","closeButtonTitle","variant","useState","showModal","setShowModal","title","onClick","LogoComponent","type","SearchComponent","placeholder","onChange","value","quantity","total","inputRef","useRef","ref","multiple","required","current","focus","defaultProps","keyword","text","split","RegExp","map","splitWord","index","toLowerCase","style","backgroundColor","color","paddingLeft","getHighlightedText","getPublicNoticeAction","dispatch","getState","GET_PUBLIC_NOTICE_REQUEST","axios","process","data","GET_PUBLIC_NOTICE_SUCCESS","payload","GET_PUBLIC_NOTICE_FAILURE","response","message","adminCreatePublicNoticeAction","formData","ADMIN_CREATE_PUBLIC_NOTICE_REQUEST","userInfo","userLogin","config","headers","Authorization","token","ADMIN_CREATE_PUBLIC_NOTICE_SUCCESS","ADMIN_CREATE_PUBLIC_NOTICE_FAILURE","adminEditPublicNoticeAction","ADMIN_EDIT_PUBLIC_NOTICE_REQUEST","id","ADMIN_EDIT_PUBLIC_NOTICE_SUCCESS","ADMIN_EDIT_PUBLIC_NOTICE_FAILURE","adminDeletePublicNoticeAction","noticeId","ADMIN_DELETE_PUBLIC_NOTICE_REQUEST","ADMIN_DELETE_PUBLIC_NOTICE_SUCCESS","ADMIN_DELETE_PUBLIC_NOTICE_FAILURE","useDispatch","useEffect","ignore","getPublicNotice","useSelector","state","loading","success","notices","setKeyword","searchedNotices","filter","post","heading","includes","SpinnerComponent","e","target","length","notice","SearchHighlightComponent","slice","ModalComponent","name","moment","createdAt","fromNow","updatedAt","_id","ErrorComponent"],"sourceRoot":""}