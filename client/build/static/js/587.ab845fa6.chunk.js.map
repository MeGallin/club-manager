{"version":3,"file":"static/js/587.ab845fa6.chunk.js","mappings":"0JAIMA,EAAkB,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC3D,OAAQD,GACN,IAAK,UAaL,IAAK,YAaL,IAAK,UAaL,IAAK,SAaL,IAAK,UAaL,IAAK,OAaL,IAAK,QAaL,IAAK,OACH,OACE,mBACEE,UAAS,UAAKF,GACdJ,GAAIA,EACJC,KAAMA,EACNC,KAAMA,EACNC,QAASA,EACTE,SAAUA,EANZ,SAQGH,IAOV,EAEDH,EAAgBQ,aAAe,CAC7BF,UAAU,GAYZ,O,iGCjHA,EAXuB,SAAC,GAAe,IAAbG,EAAY,EAAZA,MACxB,OACE,gBAAKF,UAAU,2CAAf,UACE,iBAAMA,UAAU,kBAAhB,SAAmCE,KAGxC,C,iICNKC,EAAiB,SAAC,GAUjB,IATLT,EASI,EATJA,GACAC,EAQI,EARJA,KACAS,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAC,EAKI,EALJA,MACAC,EAII,EAJJA,YACAL,EAGI,EAHJA,MACAF,EAEI,EAFJA,UACAQ,EACI,EADJA,SAEMC,GAAaC,EAAAA,EAAAA,QAAO,MAC1B,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACwB,SAA5BP,EAAWQ,QAAQZ,MACrBI,EAAWQ,QAAQC,QAEW,aAA5BT,EAAWQ,QAAQtB,MACrBoB,GAAgB,EAEnB,GAAE,CAACN,IAYJ,OACE,iBAAKT,UAAU,sBAAf,WACE,iBAAKA,UAAU,qBAAf,UACGI,IAAS,kBAAOe,QAAQ,cAAf,SAA8Bf,IACvCU,GACC,gBACEjB,QAAS,WAfe,aAA5BY,EAAWQ,QAAQtB,MACrBkB,GAAgB,SAACO,GAAD,OAAgBA,CAAhB,IAChBX,EAAWQ,QAAQtB,KAAO,SAE1BkB,GAAgB,SAACO,GAAD,OAAgBA,CAAhB,IAChBX,EAAWQ,QAAQtB,KAAO,WAUX,EACT0B,MAAQT,EAAiC,gBAAlB,gBAFzB,SAIIA,GAA2B,SAAC,MAAD,KAAZ,SAAC,MAAD,MAEjB,SAEN,kBACElB,GAAIA,EACJ4B,IAAKb,EACLd,KAAMA,EACNU,KAAMA,EACNC,MAAOA,EACPC,YAAaA,EACbL,MAAOA,EACPF,UAAWA,EACXQ,SAAUA,IAGXN,IAAS,cAAGF,UAAU,mBAAb,SAAiCE,MAGhD,EAEDC,EAAeF,aAAe,CAC5BN,KAAM4B,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,UAY/C,O,iJCjEA,EAdsB,WACpB,OACE,+BACE,iBAAKvB,UAAU,eAAf,WACE,gBAAKwB,IAAKC,EAAMC,IAAI,OAAO1B,UAAU,gBACrC,4BACE,iBAAMA,UAAU,iBAAhB,yBACA,gBAAKA,UAAU,sBAAf,qCAKT,C,8GCQD,EAlByB,SAAC,GAAiB,IAAf2B,EAAc,EAAdA,QAC1B,GAA0BhB,EAAAA,EAAAA,UAAS,IAAnC,eAAOiB,EAAP,KAAcC,EAAd,KAQA,OAPAb,EAAAA,EAAAA,YAAU,WACR,IAAMc,EAAWC,YAAW,WAC1BF,EAAS,QACV,GAAE,KACH,OAAO,kBAAMG,cAAcF,EAApB,CACR,GAAE,CAACF,KAGF,gBAAK5B,UAAU,0CAAf,UACE,iBAAMA,UAAS,4BAAuB4B,GAAtC,SAAgDD,KAGrD,C,oGChBKM,EAAoB,SAAC,GAQpB,IAPLvC,EAOI,EAPJA,GACAW,EAMI,EANJA,KACAC,EAKI,EALJA,MACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,SACAJ,EAEI,EAFJA,MACAF,EACI,EADJA,MAEA,OACE,2BACGE,IAAS,kBAAOe,QAAQ,cAAf,SAA8Bf,KACxC,qBACEV,GAAIA,EACJW,KAAMA,EACNC,MAAOA,EACPC,YAAaA,EACbC,SAAUA,IAEXN,IAAS,cAAGF,UAAU,mBAAb,SAAiCE,MAGhD,EAED+B,EAAkBhC,aAAe,CAC/BN,KAAM4B,IAAAA,QAYR,O,6OCxCO,IAAMW,EAAgB,eAChBC,EAAY,eACZC,EACX,uIACWC,EACX,sUACWC,EAAuB,+BACvBC,EAAa,oDACbC,EAAY,kBACZC,EAAgB,W,uQCiI7B,EA5H6B,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgChC,EAAAA,EAAAA,UAAS,CACvCN,KAAM,GACNuC,MAAO,GACPjB,QAAS,KAHX,eAAOkB,EAAP,KAAiBC,EAAjB,KAKQzC,EAAyBwC,EAAzBxC,KAAMuC,EAAmBC,EAAnBD,MAAOjB,EAAYkB,EAAZlB,QAEfoB,EAAiB,SAACC,GACtBF,GAAY,SAACG,GAAD,eAAC,UACRA,GADO,cAETD,EAAEE,OAAO7C,KAAO2C,EAAEE,OAAO5C,OAFhB,GAIb,EAaK6C,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,WAAjB,IACxBG,EAA4BH,EAA5BG,QAASpD,EAAmBiD,EAAnBjD,MAAOqD,EAAYJ,EAAZI,QAExB,OACE,gCACGrD,GAAQ,SAACsD,EAAA,EAAD,CAAgBtD,MAAOA,IAAY,KAC3CqD,GACC,SAACE,EAAA,EAAD,CACE9B,QAAS,mDAET,KACH2B,GACC,SAACI,EAAA,EAAD,KAEA,iBAAK1D,UAAU,UAAf,WACE,sBAAUA,UAAU,WAApB,WACE,8CACA,4BACE,oGAIA,kBAAM2D,SAjCc,SAACX,GAC/BA,EAAEY,iBAEFlB,ECzB6B,SAACG,GAAD,gDAAc,WAAOH,EAAUmB,GAAjB,8FAE3CnB,EAAS,CACP/C,KAAMmE,EAAAA,KAGRC,QAAQC,IAAInB,GAN+B,SAQpBoB,EAAAA,EAAAA,KAAA,UAClBC,qCADkB,oBAErBrB,GAVyC,gBAQnCsB,EARmC,EAQnCA,KAIRzB,EAAS,CAAE/C,KAAMyE,EAAAA,GAAsBC,QAASF,IAZL,kDAc3CzB,EAAS,CACP/C,KAAM2E,EAAAA,GACND,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKxC,QAClC,KAAM4C,SAASJ,KAAKxC,QACpB,KAAMA,UAnB6B,0DAAd,wDDyBpB6C,CAAkB3B,IAC3BC,EAAY,CACVzC,KAAM,GACNuC,MAAO,GACPjB,QAAS,IAEZ,EAwBW,WACE,SAACxB,EAAA,EAAD,CACEC,MAAM,OACNE,MAAOD,EACPV,KAAK,OACLU,KAAK,OACLoE,UAAQ,EACRzE,UAAYmC,EAAAA,GAAAA,KAAe9B,GAAoB,UAAZ,UACnCH,MACGiC,EAAAA,GAAAA,KAAe9B,IAAyB,IAAhBA,EAAKqE,OAE1B,KAFJ,0CAIFlE,SAAUuC,KAEZ,SAAC5C,EAAA,EAAD,CACEC,MAAM,QACNE,MAAOsC,EACPjD,KAAK,QACLU,KAAK,QACLoE,UAAQ,EACRzE,UAAYoC,EAAAA,GAAAA,KAAgBQ,GAAqB,UAAZ,UACrC1C,MACGkC,EAAAA,GAAAA,KAAgBQ,IAA2B,IAAjBA,EAAM8B,OAE7B,KAFJ,yBAIFlE,SAAUuC,KAGZ,SAACd,EAAA,EAAD,CACE7B,MAAM,uBACNV,GAAG,UACHW,KAAK,UACLC,MAAOqB,EACPzB,MACEyB,EAAQ+C,QAAU,GAAyB,KAAb,OAAP/C,QAAO,IAAPA,OAAA,EAAAA,EAAS+C,QAAhC,6CAEI,KAENlE,SAAUuC,KAGZ,SAACtD,EAAA,EAAD,CACEE,KAAK,SACLC,MACGwC,EAAAA,GAAAA,KAAgBQ,KAChBT,EAAAA,GAAAA,KAAe9B,IAChBsB,EAAQ+C,QAAU,EACd,WACA,sBAEN5E,QAAQ,OACRC,UACGqC,EAAAA,GAAAA,KAAgBQ,KAChBT,EAAAA,GAAAA,KAAe9B,IAChBsB,EAAQ+C,QAAU,cAM5B,sBAAU1E,UAAU,WAApB,WACE,iDACA,SAAC2E,EAAA,EAAD,KACA,0BACE,2DAOb,EEhID,EAJoB,WAClB,OAAO,SAAC,EAAD,GACR,C,mCCGD,IAAIC,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIrF,KAAO,sBACLqF,CAPL,CAQF,CAED,SAASE,IACP,OAAOT,CACR,CAHDA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAevE,UAAYuE,EAEpBA,CACR,C,uBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["components/Button/ButtonComponent.jsx","components/ErrorComponent/ErrorComponent.jsx","components/Input/InputComponent.jsx","components/LogoComponent/LogoComponent.jsx","components/Success/SuccessComponent.jsx","components/TextArea/TextAreaComponent.jsx","utils/regEx.js","components/ContactFormComponent/ContactFormComponent.jsx","store/actions/contactFormActions.js","views/ContactView/ContactView.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React from 'react';\nimport './ButtonComponent.scss';\nimport PropTypes from 'prop-types';\n\nconst ButtonComponent = ({ id, type, text, onClick, variant, disabled }) => {\n  switch (variant) {\n    case 'primary':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'secondary':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'success':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'danger':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'warning':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'info':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'light':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'dark':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n\n    default:\n      break;\n  }\n};\n\nButtonComponent.defaultProps = {\n  disabled: true,\n};\n\nButtonComponent.propTypes = {\n  id: PropTypes.string,\n  type: PropTypes.string,\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  className: PropTypes.string,\n  variant: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default ButtonComponent;\n","import React from 'react';\nimport './ErrorComponent.scss';\nimport PropTypes from 'prop-types';\nimport 'animate.css';\n\nconst ErrorComponent = ({ error }) => {\n  return (\n    <div className=\" animate__animated animate__bounceInLeft\">\n      <span className=\"error-component\">{error}</span>\n    </div>\n  );\n};\n\nErrorComponent.propTypes = {\n  error: PropTypes.string,\n};\nexport default ErrorComponent;\n","import React, { useRef, useEffect, useState } from 'react';\nimport './InputComponent.scss';\nimport PropTypes from 'prop-types';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\n\nconst InputComponent = ({\n  id,\n  type,\n  label,\n  name,\n  value,\n  placeholder,\n  error,\n  className,\n  onChange,\n}) => {\n  const inputFocus = useRef(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const [onlyPassword, setOnlyPassword] = useState(true);\n\n  useEffect(() => {\n    if (inputFocus.current.name === 'name') {\n      inputFocus.current.focus();\n    }\n    if (inputFocus.current.type !== 'password') {\n      setOnlyPassword(false);\n    }\n  }, [inputFocus]);\n\n  const handleShowHidePw = () => {\n    if (inputFocus.current.type === 'password') {\n      setShowPassword((prevState) => !prevState);\n      inputFocus.current.type = 'text';\n    } else {\n      setShowPassword((prevState) => !prevState);\n      inputFocus.current.type = 'password';\n    }\n  };\n\n  return (\n    <div className=\"input-field-wrapper\">\n      <div className=\"input-icon-wrapper\">\n        {label && <label htmlFor=\"input-field\">{label}</label>}\n        {onlyPassword ? (\n          <div\n            onClick={() => handleShowHidePw()}\n            title={!showPassword ? 'SHOW PASSWORD' : 'HIDE PASSWORD'}\n          >\n            {!showPassword ? <FaEye /> : <FaEyeSlash />}\n          </div>\n        ) : null}\n      </div>\n      <input\n        id={id}\n        ref={inputFocus}\n        type={type}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        error={error}\n        className={className}\n        onChange={onChange}\n      />\n\n      {error && <p className=\"validation-error\">{error}</p>}\n    </div>\n  );\n};\n\nInputComponent.defaultProps = {\n  type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nInputComponent.propTypes = {\n  text: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  placeholder: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default InputComponent;\n","import './LogoComponent.scss';\nimport logo from '../../assets/club-manager-logo.png';\n\nconst LogoComponent = () => {\n  return (\n    <>\n      <div className=\"logo-wrapper\">\n        <img src={logo} alt=\"logo\" className=\"logo-image\" />\n        <div>\n          <span className=\"logo-main-text\">Anorthosis</span>\n          <div className=\"logo-secondary-text\">Football Academy</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LogoComponent;\n","import { useState, useEffect } from 'react';\nimport './SuccessComponent.scss';\nimport PropTypes from 'prop-types';\nimport 'animate.css';\n\nconst SuccessComponent = ({ message }) => {\n  const [clear, setClear] = useState('');\n  useEffect(() => {\n    const interval = setTimeout(() => {\n      setClear('clear');\n    }, 6000);\n    return () => clearInterval(interval);\n  }, [clear]);\n\n  return (\n    <div className=\"animate__animated animate__bounceInLeft\">\n      <span className={`success-component ${clear}`}>{message}</span>\n    </div>\n  );\n};\nSuccessComponent.propTypes = {\n  message: PropTypes.string,\n};\nexport default SuccessComponent;\n","import PropTypes from 'prop-types';\nimport './TextAreaComponent.scss';\n\nconst TextAreaComponent = ({\n  id,\n  name,\n  value,\n  placeholder,\n  onChange,\n  label,\n  error,\n}) => {\n  return (\n    <div>\n      {label && <label htmlFor=\"input-field\">{label}</label>}\n      <textarea\n        id={id}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n      {error && <p className=\"validation-error\">{error}</p>}\n    </div>\n  );\n};\n\nTextAreaComponent.defaultProps = {\n  type: PropTypes.string,\n};\n\nTextAreaComponent.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default TextAreaComponent;\n","export const usernameRegEx = /[a-zA-Z]{4,}/;\nexport const nameRegEx = /[a-zA-Z]{3,}/;\nexport const emailRegEx =\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/;\nexport const dobRegEx =\n  /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[13-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/;\nexport const preferredNumberRegEx = /^[0-9]$|^[1-9][0-9]$|^(100)$/;\nexport const phoneRegEx = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/;\nexport const teamRegEx = /[0-9a-zA-Z]{4,}/;\nexport const ageGroupRegEx = /[0-9]{4,}/;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nameRegEx, emailRegEx } from '../../utils/regEx';\n\nimport ButtonComponent from '../Button/ButtonComponent';\nimport InputComponent from '../Input/InputComponent';\nimport TextAreaComponent from '../TextArea/TextAreaComponent';\nimport SpinnerComponent from '../Spinner/SpinnerComponent';\n\nimport { contactFormAction } from '../../store/actions/contactFormActions';\nimport SuccessComponent from '../Success/SuccessComponent';\nimport ErrorComponent from '../ErrorComponent/ErrorComponent';\nimport LogoComponent from '../LogoComponent/LogoComponent';\n\nconst ContactFormComponent = () => {\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: '',\n  });\n  const { name, email, message } = formData;\n\n  const handleOnChange = (e) => {\n    setFormData((previousState) => ({\n      ...previousState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmitContactForm = (e) => {\n    e.preventDefault();\n    //Dispatch your CREATE action\n    dispatch(contactFormAction(formData));\n    setFormData({\n      name: '',\n      email: '',\n      message: '',\n    });\n  };\n\n  const contactForm = useSelector((state) => state.contactForm);\n  const { loading, error, success } = contactForm;\n\n  return (\n    <>\n      {error ? <ErrorComponent error={error} /> : null}\n      {success ? (\n        <SuccessComponent\n          message={'Your enquiry have been successfully submitted.'}\n        />\n      ) : null}\n      {loading ? (\n        <SpinnerComponent />\n      ) : (\n        <div className=\"wrapper\">\n          <fieldset className=\"fieldSet\">\n            <legend>Get In Touch</legend>\n            <div>\n              <p>\n                If you have any questions or need help, please fill out the form\n                below.\n              </p>\n              <form onSubmit={handleSubmitContactForm}>\n                <InputComponent\n                  label=\"Name\"\n                  value={name}\n                  type=\"text\"\n                  name=\"name\"\n                  required\n                  className={!nameRegEx.test(name) ? 'invalid' : 'entered'}\n                  error={\n                    !nameRegEx.test(name) && name.length !== 0\n                      ? `Name must contain at least 5 characters`\n                      : null\n                  }\n                  onChange={handleOnChange}\n                />\n                <InputComponent\n                  label=\"EMAIL\"\n                  value={email}\n                  type=\"email\"\n                  name=\"email\"\n                  required\n                  className={!emailRegEx.test(email) ? 'invalid' : 'entered'}\n                  error={\n                    !emailRegEx.test(email) && email.length !== 0\n                      ? `Invalid email address.`\n                      : null\n                  }\n                  onChange={handleOnChange}\n                />\n\n                <TextAreaComponent\n                  label=\"How can we help you?\"\n                  id=\"message\"\n                  name=\"message\"\n                  value={message}\n                  error={\n                    message.length <= 8 && message?.length !== 0\n                      ? `Message must contain at least 8 characters`\n                      : null\n                  }\n                  onChange={handleOnChange}\n                />\n\n                <ButtonComponent\n                  type=\"submit\"\n                  text={\n                    !emailRegEx.test(email) ||\n                    !nameRegEx.test(name) ||\n                    message.length <= 8\n                      ? 'Disabled'\n                      : 'Submit your Enquiry'\n                  }\n                  variant=\"dark\"\n                  disabled={\n                    !emailRegEx.test(email) ||\n                    !nameRegEx.test(name) ||\n                    message.length <= 8\n                  }\n                />\n              </form>\n            </div>\n          </fieldset>\n          <fieldset className=\"fieldSet\">\n            <legend>Contact Details</legend>\n            <LogoComponent />\n            <div>\n              <p>Get in touch with us.</p>\n            </div>\n          </fieldset>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ContactFormComponent;\n","import {\n  CONTACT_FORM_FAILURE,\n  CONTACT_FORM_REQUEST,\n  CONTACT_FORM_SUCCESS,\n} from '../constants/contactFormConstants';\nimport axios from 'axios';\n\n//POST: Contact form details\nexport const contactFormAction = (formData) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CONTACT_FORM_REQUEST,\n    });\n\n    console.log(formData);\n\n    const { data } = await axios.post(\n      `${process.env.REACT_APP_END_POINT}api/contact-form`,\n      formData,\n    );\n    dispatch({ type: CONTACT_FORM_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: CONTACT_FORM_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React from 'react';\nimport ContactFormComponent from '../../components/ContactFormComponent/ContactFormComponent';\nimport './ContactView.scss';\n\nconst ContactView = () => {\n  return <ContactFormComponent />;\n};\n\nexport default ContactView;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ButtonComponent","id","type","text","onClick","variant","disabled","className","defaultProps","error","InputComponent","label","name","value","placeholder","onChange","inputFocus","useRef","useState","showPassword","setShowPassword","onlyPassword","setOnlyPassword","useEffect","current","focus","htmlFor","prevState","title","ref","PropTypes","src","logo","alt","message","clear","setClear","interval","setTimeout","clearInterval","TextAreaComponent","usernameRegEx","nameRegEx","emailRegEx","dobRegEx","preferredNumberRegEx","phoneRegEx","teamRegEx","ageGroupRegEx","dispatch","useDispatch","email","formData","setFormData","handleOnChange","e","previousState","target","contactForm","useSelector","state","loading","success","ErrorComponent","SuccessComponent","SpinnerComponent","onSubmit","preventDefault","getState","CONTACT_FORM_REQUEST","console","log","axios","process","data","CONTACT_FORM_SUCCESS","payload","CONTACT_FORM_FAILURE","response","contactFormAction","required","length","LogoComponent","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}