{"version":3,"file":"static/js/256.5b53c4fc.chunk.js","mappings":"0JAIMA,EAAkB,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC3D,OAAQD,GACN,IAAK,UAaL,IAAK,YAaL,IAAK,UAaL,IAAK,SAaL,IAAK,UAaL,IAAK,OAaL,IAAK,QAaL,IAAK,OACH,OACE,mBACEE,UAAS,UAAKF,GACdJ,GAAIA,EACJC,KAAMA,EACNC,KAAMA,EACNC,QAASA,EACTE,SAAUA,EANZ,SAQGH,IAOV,EAEDH,EAAgBQ,aAAe,CAC7BF,UAAU,GAYZ,O,iGCjHA,EAXuB,SAAC,GAAe,IAAbG,EAAY,EAAZA,MACxB,OACE,gBAAKF,UAAU,2CAAf,UACE,iBAAMA,UAAU,kBAAhB,SAAmCE,KAGxC,C,iICNKC,EAAiB,SAAC,GAUjB,IATLT,EASI,EATJA,GACAC,EAQI,EARJA,KACAS,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAC,EAKI,EALJA,MACAC,EAII,EAJJA,YACAL,EAGI,EAHJA,MACAF,EAEI,EAFJA,UACAQ,EACI,EADJA,SAEMC,GAAaC,EAAAA,EAAAA,QAAO,MAC1B,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACwB,SAA5BP,EAAWQ,QAAQZ,MACrBI,EAAWQ,QAAQC,QAEW,aAA5BT,EAAWQ,QAAQtB,MACrBoB,GAAgB,EAEnB,GAAE,CAACN,IAYJ,OACE,iBAAKT,UAAU,sBAAf,WACE,iBAAKA,UAAU,qBAAf,UACGI,IAAS,kBAAOe,QAAQ,cAAf,SAA8Bf,IACvCU,GACC,gBACEjB,QAAS,WAfe,aAA5BY,EAAWQ,QAAQtB,MACrBkB,GAAgB,SAACO,GAAD,OAAgBA,CAAhB,IAChBX,EAAWQ,QAAQtB,KAAO,SAE1BkB,GAAgB,SAACO,GAAD,OAAgBA,CAAhB,IAChBX,EAAWQ,QAAQtB,KAAO,WAUX,EACT0B,MAAQT,EAAiC,gBAAlB,gBAFzB,SAIIA,GAA2B,SAAC,MAAD,KAAZ,SAAC,MAAD,MAEjB,SAEN,kBACElB,GAAIA,EACJ4B,IAAKb,EACLd,KAAMA,EACNU,KAAMA,EACNC,MAAOA,EACPC,YAAaA,EACbL,MAAOA,EACPF,UAAWA,EACXQ,SAAUA,IAGXN,IAAS,cAAGF,UAAU,mBAAb,SAAiCE,MAGhD,EAEDC,EAAeF,aAAe,CAC5BN,KAAM4B,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,UAY/C,O,8GC3DA,EAlByB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,GAA0Bb,EAAAA,EAAAA,UAAS,IAAnC,eAAOc,EAAP,KAAcC,EAAd,KAQA,OAPAV,EAAAA,EAAAA,YAAU,WACR,IAAMW,EAAWC,YAAW,WAC1BF,EAAS,QACV,GAAE,KACH,OAAO,kBAAMG,cAAcF,EAApB,CACR,GAAE,CAACF,KAGF,gBAAKzB,UAAU,0CAAf,UACE,iBAAMA,UAAS,4BAAuByB,GAAtC,SAAgDD,KAGrD,C,yRCSYM,EAAyB,SAACC,GAAD,gDAAc,WAAOC,GAAP,gGAEhDA,EAAS,CACPrC,KAAMsC,EAAAA,KAGFC,EAAS,CACbC,QAAS,CACP,eAAgB,qBAR4B,SAYzBC,EAAAA,EAAAA,KAAA,UAClBC,qCADkB,qBAErBN,EACAG,GAf8C,gBAYxCI,EAZwC,EAYxCA,KAKRN,EAAS,CAAErC,KAAM4C,EAAAA,GAAuBC,QAASF,IAjBD,kDAmBhDN,EAAS,CACPrC,KAAM8C,EAAAA,GACND,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKd,QAClC,KAAMkB,SAASJ,KAAKd,QACpB,KAAMA,UAxBkC,0DAAd,uDA8BzBmB,EAAyB,2DAAM,WAAOX,EAAUY,GAAjB,0GAExCZ,EAAS,CACPrC,KAAMkD,EAAAA,MAGJD,IAAWE,UAAUC,SANe,0BASlCH,IADWG,EARuB,EAQpCD,UAAaC,SAGTb,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBa,cAAc,UAAD,OAAYD,EAASE,SAdA,SAiBfb,EAAAA,EAAAA,IAAA,UAClBC,qCADkB,+BAErBH,GAnBoC,gBAiB9BI,EAjB8B,EAiB9BA,KAIRN,EAAS,CAAErC,KAAMuD,EAAAA,GAA4BV,QAASF,IArBhB,YAwBpCM,IAAWO,gBAAgBJ,SAxBS,0BA2BlCH,IADiBG,EA1BiB,EA0BpCI,gBAAmBJ,SAGfb,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBa,cAAc,UAAD,OAAYD,EAASE,SAhCA,UAoCfb,EAAAA,EAAAA,IAAA,UAClBC,qCADkB,+BAErBH,GAtCoC,iBAoC9BI,EApC8B,EAoC9BA,KAIRN,EAAS,CAAErC,KAAMuD,EAAAA,GAA4BV,QAASF,IAxChB,0DA2CxCN,EAAS,CACPrC,KAAMyD,EAAAA,GACNZ,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKd,QAClC,KAAMkB,SAASJ,KAAKd,QACpB,KAAMA,UAhD0B,0DAAN,yDAsDzB6B,EAAkB,SAACC,EAAOC,GAAR,gDAAqB,WAAOvB,GAAP,gGAEhDA,EAAS,CACPrC,KAAM6D,EAAAA,KAGFtB,EAAS,CACbC,QAAS,CACP,eAAgB,qBAR4B,SAYzBC,EAAAA,EAAAA,KAAA,UAClBC,qCADkB,kBAErB,CAAEiB,MAAOA,EAAOC,SAAUA,GAC1BrB,GAf8C,gBAYxCI,EAZwC,EAYxCA,KAKRN,EAAS,CAAErC,KAAM8D,EAAAA,GAAoBjB,QAASF,IAC9CoB,aAAaC,QAAQ,WAAYC,KAAKC,UAAUvB,IAChDN,EAASW,KAnBuC,kDAqBhDX,EAAS,CACPrC,KAAMmE,EAAAA,GACNtB,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKd,QAClC,KAAMkB,SAASJ,KAAKd,QACpB,KAAMA,UA1BkC,0DAArB,uDAgClBuC,EAAwB,SAACC,GAAD,gDAAe,WAAOhC,GAAP,gGAEhDA,EAAS,CACPrC,KAAMsE,EAAAA,KAGF/B,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBa,cAAc,UAAD,OAAYgB,EAAUE,cATS,SAazB9B,EAAAA,EAAAA,KAAA,UAClBC,qCADkB,yBAErBH,GAf8C,gBAaxCI,EAbwC,EAaxCA,KAKRN,EAAS,CAAErC,KAAMwE,EAAAA,EAA2B3B,QAASF,IACrDoB,aAAaC,QAAQ,WAAYC,KAAKC,UAAUvB,IAChDN,EAASW,KApBuC,kDAsBhDX,EAAS,CACPrC,KAAMyE,EAAAA,GACN5B,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKd,QAClC,KAAMkB,SAASJ,KAAKd,QACpB,KAAMA,UA3BkC,0DAAf,uDAiCxB6C,EAAmB,kBAAM,SAACrC,GACrC0B,aAAaY,WAAW,YACxBtC,EAAS,CAAErC,KAAM4E,EAAAA,KACjBvC,EAAS,CAAErC,KAAM6E,EAAAA,IAClB,CAJ+B,EAOnBC,EAAwB,SAACnB,GAAD,gDAAW,WAAOtB,GAAP,gGAE5CA,EAAS,CACPrC,KAAM+E,EAAAA,KAGFxC,EAAS,CACbC,QAAS,CACP,eAAgB,qBARwB,SAYrBC,EAAAA,EAAAA,KAAA,UAClBC,qCADkB,4BAErB,CAAEiB,MAAOA,GACTpB,GAf0C,gBAYpCI,EAZoC,EAYpCA,KAKRN,EAAS,CAAErC,KAAMgF,EAAAA,GAA2BnC,QAASF,IAjBT,kDAmB5CN,EAAS,CACPrC,KAAMiF,EAAAA,GACNpC,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKd,QAClC,KAAMkB,SAASJ,KAAKd,QACpB,KAAMA,UAxB8B,0DAAX,uDA8BxBqD,EAA0B,SAACC,GAAD,gDAAiB,WAAO9C,GAAP,gGAEpDA,EAAS,CACPrC,KAAMoF,EAAAA,KAGF7C,EAAS,CACbC,QAAS,CACP,eAAgB,qBARgC,SAY7BC,EAAAA,EAAAA,IAAA,UAClBC,qCADkB,kCACuCyC,EAAYE,oBACxEF,EACA5C,GAfkD,gBAY5CI,EAZ4C,EAY5CA,KAKRN,EAAS,CAAErC,KAAMsF,EAAAA,GAA6BzC,QAASF,IAjBH,kDAmBpDN,EAAS,CACPrC,KAAMuF,EAAAA,GACN1C,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKd,QAClC,KAAMkB,SAASJ,KAAKd,QACpB,KAAMA,UAxBsC,0DAAjB,uDA8B1B2D,EACX,SAACpD,GAAD,gDAAc,WAAOC,EAAUY,GAAjB,0GAEVZ,EAAS,CACPrC,KAAMyF,EAAAA,MAGJxC,IAAWE,UAAUC,SANf,0BASJH,IADWG,EARP,EAQND,UAAaC,SAGTb,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBa,cAAc,UAAD,OAAYD,EAASE,SAd9B,SAiBeb,EAAAA,EAAAA,IAAA,UAClBC,qCADkB,yBAC8BN,EAASrC,IAC5DqC,EACAG,GApBM,gBAiBAI,EAjBA,EAiBAA,KAKRN,EAAS,CACPrC,KAAM0F,EAAAA,GACN7C,QAASF,IAEXN,EAASW,KA1BD,YA6BNC,IAAWO,gBAAgBJ,SA7BrB,0BAgCJH,IADiBG,EA/Bb,EA+BNI,gBAAmBJ,SAGfb,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBa,cAAc,UAAD,OAAYD,EAASE,SArC9B,UAyCeb,EAAAA,EAAAA,IAAA,UAClBC,qCADkB,yBAC8BN,EAASrC,IAC5DqC,EACAG,GA5CM,iBAyCAI,EAzCA,EAyCAA,KAKRN,EAAS,CACPrC,KAAM0F,EAAAA,GACN7C,QAASF,IAEXN,EAASW,KAlDD,0DAqDVX,EAAS,CACPrC,KAAM2F,EAAAA,GACN9C,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKd,QAClC,KAAMkB,SAASJ,KAAKd,QACpB,KAAMA,UA1DJ,0DAAd,wD,2JCnKF,UAtEoB,WAClB,IAAMQ,GAAWuD,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACf,GAAgChF,EAAAA,EAAAA,UAAS,IAAzC,eAAO4C,EAAP,KAAiBqC,EAAjB,KAEMC,GAAoBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,iBAAjB,IAC9BG,EAA4BH,EAA5BG,QAAS9F,EAAmB2F,EAAnB3F,MAAO+F,EAAYJ,EAAZI,QAqBxB,OACE,gCACG/F,GAAQ,SAAC,IAAD,CAAgBA,MAAOA,IAAY,KAC3C+F,GACC,SAAC,IAAD,CAAkBzE,QAAQ,kEACxB,KACHwE,GACC,SAAC,IAAD,KAEA,sBAAUhG,UAAU,WAApB,WACE,gDACA,0BACE,kBAAMkG,SA3BU,SAACC,GACzBA,EAAEC,iBAEFpE,GACE6C,EAAAA,EAAAA,IAAwB,CACtBtB,SAAUA,EACVyB,mBAAoBU,EAAOzC,SAG/B2C,EAAY,IACZhE,YAAW,WACT4D,EAAS,SACV,GAAE,IACJ,EAcS,WACE,SAAC,IAAD,CACEpF,MAAM,eACNE,MAAOiD,EACP5D,KAAK,WACLU,KAAK,WACLgG,UAAQ,EACRrG,UAAWuD,EAAS+C,QAAU,EAAI,UAAY,UAC9CpG,MACEqD,EAAS+C,QAAU,GAAyB,IAApB/C,EAAS+C,OAAjC,8CAEI,KAEN9F,SA5CS,SAAC2F,GACtBP,EAAYO,EAAEI,OAAOjG,MACtB,KA6CW,SAAC,IAAD,CACEX,KAAK,SACLC,KAAK,SACLE,QAAQ,UACRC,SAAUwD,EAAS+C,QAAU,cAQ5C,C,mCCvED,IAAIE,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIjH,KAAO,sBACLiH,CAPL,CAQF,CAED,SAASE,IACP,OAAOT,CACR,CAHDA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAenG,UAAYmG,EAEpBA,CACR,C,uBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["components/Button/ButtonComponent.jsx","components/ErrorComponent/ErrorComponent.jsx","components/Input/InputComponent.jsx","components/Success/SuccessComponent.jsx","store/actions/userActions.js","views/PWRestView/PWResetView.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React from 'react';\nimport './ButtonComponent.scss';\nimport PropTypes from 'prop-types';\n\nconst ButtonComponent = ({ id, type, text, onClick, variant, disabled }) => {\n  switch (variant) {\n    case 'primary':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'secondary':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'success':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'danger':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'warning':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'info':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'light':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n    case 'dark':\n      return (\n        <button\n          className={`${variant}`}\n          id={id}\n          type={type}\n          text={text}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {text}\n        </button>\n      );\n\n    default:\n      break;\n  }\n};\n\nButtonComponent.defaultProps = {\n  disabled: true,\n};\n\nButtonComponent.propTypes = {\n  id: PropTypes.string,\n  type: PropTypes.string,\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  className: PropTypes.string,\n  variant: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default ButtonComponent;\n","import React from 'react';\nimport './ErrorComponent.scss';\nimport PropTypes from 'prop-types';\nimport 'animate.css';\n\nconst ErrorComponent = ({ error }) => {\n  return (\n    <div className=\" animate__animated animate__bounceInLeft\">\n      <span className=\"error-component\">{error}</span>\n    </div>\n  );\n};\n\nErrorComponent.propTypes = {\n  error: PropTypes.string,\n};\nexport default ErrorComponent;\n","import React, { useRef, useEffect, useState } from 'react';\nimport './InputComponent.scss';\nimport PropTypes from 'prop-types';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\n\nconst InputComponent = ({\n  id,\n  type,\n  label,\n  name,\n  value,\n  placeholder,\n  error,\n  className,\n  onChange,\n}) => {\n  const inputFocus = useRef(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const [onlyPassword, setOnlyPassword] = useState(true);\n\n  useEffect(() => {\n    if (inputFocus.current.name === 'name') {\n      inputFocus.current.focus();\n    }\n    if (inputFocus.current.type !== 'password') {\n      setOnlyPassword(false);\n    }\n  }, [inputFocus]);\n\n  const handleShowHidePw = () => {\n    if (inputFocus.current.type === 'password') {\n      setShowPassword((prevState) => !prevState);\n      inputFocus.current.type = 'text';\n    } else {\n      setShowPassword((prevState) => !prevState);\n      inputFocus.current.type = 'password';\n    }\n  };\n\n  return (\n    <div className=\"input-field-wrapper\">\n      <div className=\"input-icon-wrapper\">\n        {label && <label htmlFor=\"input-field\">{label}</label>}\n        {onlyPassword ? (\n          <div\n            onClick={() => handleShowHidePw()}\n            title={!showPassword ? 'SHOW PASSWORD' : 'HIDE PASSWORD'}\n          >\n            {!showPassword ? <FaEye /> : <FaEyeSlash />}\n          </div>\n        ) : null}\n      </div>\n      <input\n        id={id}\n        ref={inputFocus}\n        type={type}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        error={error}\n        className={className}\n        onChange={onChange}\n      />\n\n      {error && <p className=\"validation-error\">{error}</p>}\n    </div>\n  );\n};\n\nInputComponent.defaultProps = {\n  type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nInputComponent.propTypes = {\n  text: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  placeholder: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default InputComponent;\n","import { useState, useEffect } from 'react';\nimport './SuccessComponent.scss';\nimport PropTypes from 'prop-types';\nimport 'animate.css';\n\nconst SuccessComponent = ({ message }) => {\n  const [clear, setClear] = useState('');\n  useEffect(() => {\n    const interval = setTimeout(() => {\n      setClear('clear');\n    }, 6000);\n    return () => clearInterval(interval);\n  }, [clear]);\n\n  return (\n    <div className=\"animate__animated animate__bounceInLeft\">\n      <span className={`success-component ${clear}`}>{message}</span>\n    </div>\n  );\n};\nSuccessComponent.propTypes = {\n  message: PropTypes.string,\n};\nexport default SuccessComponent;\n","import axios from 'axios';\nimport {\n  GOOGLE_USER_LOGIN_FAILURE,\n  GOOGLE_USER_LOGIN_REQUEST,\n  GOOGLE_USER_LOGIN_SUCCESS,\n  GOOGLE_USER_LOGOUT,\n  USER_ADMIN_DETAILS_FAILURE,\n  USER_ADMIN_DETAILS_REQUEST,\n  USER_ADMIN_DETAILS_SUCCESS,\n  USER_FORGOT_EMAIL_FAILURE,\n  USER_FORGOT_EMAIL_REQUEST,\n  USER_FORGOT_EMAIL_SUCCESS,\n  USER_LOGIN_FAILURE,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAILURE,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_RESET_PASSWORD_FAILURE,\n  USER_RESET_PASSWORD_REQUEST,\n  USER_RESET_PASSWORD_SUCCESS,\n  USER_UPDATE_USER_ADMIN_DETAILS_FAILURE,\n  USER_UPDATE_USER_ADMIN_DETAILS_REQUEST,\n  USER_UPDATE_USER_ADMIN_DETAILS_SUCCESS,\n} from '../constants/userConstants';\n\n// USER Registration Done\nexport const userRegistrationAction = (formData) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      `${process.env.REACT_APP_END_POINT}api/auth/register`,\n      formData,\n      config,\n    );\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//GET: USER Admin details Done\nexport const userAdminDetailsAction = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_ADMIN_DETAILS_REQUEST,\n    });\n\n    if (getState().userLogin.userInfo) {\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      const { data } = await axios.get(\n        `${process.env.REACT_APP_END_POINT}api/auth/user-admin-details`,\n        config,\n      );\n      dispatch({ type: USER_ADMIN_DETAILS_SUCCESS, payload: data });\n    }\n\n    if (getState().googleUserLogin.userInfo) {\n      const {\n        googleUserLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `${process.env.REACT_APP_END_POINT}api/auth/user-admin-details`,\n        config,\n      );\n      dispatch({ type: USER_ADMIN_DETAILS_SUCCESS, payload: data });\n    }\n  } catch (error) {\n    dispatch({\n      type: USER_ADMIN_DETAILS_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//User Login Done\nexport const userLoginAction = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      `${process.env.REACT_APP_END_POINT}api/auth/login`,\n      { email: email, password: password },\n      config,\n    );\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch(userAdminDetailsAction());\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//GOOGLE User Login\nexport const googleUserLoginAction = (googleRes) => async (dispatch) => {\n  try {\n    dispatch({\n      type: GOOGLE_USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${googleRes.credential}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `${process.env.REACT_APP_END_POINT}api/auth/google-login`,\n      config,\n    );\n\n    dispatch({ type: GOOGLE_USER_LOGIN_SUCCESS, payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch(userAdminDetailsAction());\n  } catch (error) {\n    dispatch({\n      type: GOOGLE_USER_LOGIN_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// USER USER_LOGOUT Done\nexport const userLogoutAction = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: GOOGLE_USER_LOGOUT });\n};\n\n//User FORGOT EMAIL ACTION Done\nexport const userForgotEmailAction = (email) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_FORGOT_EMAIL_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      `${process.env.REACT_APP_END_POINT}api/auth/forgot-password`,\n      { email: email },\n      config,\n    );\n    dispatch({ type: USER_FORGOT_EMAIL_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_FORGOT_EMAIL_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//User Login Done\nexport const userResetPasswordAction = (updatedInfo) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_RESET_PASSWORD_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.put(\n      `${process.env.REACT_APP_END_POINT}api/auth/resetpassword/${updatedInfo.resetPasswordToken}`,\n      updatedInfo,\n      config,\n    );\n    dispatch({ type: USER_RESET_PASSWORD_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_RESET_PASSWORD_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//GET: USER UPDATE Admin details Done\nexport const userUpdateAdminDetailsAction =\n  (formData) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_UPDATE_USER_ADMIN_DETAILS_REQUEST,\n      });\n\n      if (getState().userLogin.userInfo) {\n        const {\n          userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${userInfo.token}`,\n          },\n        };\n        const { data } = await axios.put(\n          `${process.env.REACT_APP_END_POINT}api/auth/user/${formData.id}`,\n          formData,\n          config,\n        );\n        dispatch({\n          type: USER_UPDATE_USER_ADMIN_DETAILS_SUCCESS,\n          payload: data,\n        });\n        dispatch(userAdminDetailsAction());\n      }\n\n      if (getState().googleUserLogin.userInfo) {\n        const {\n          googleUserLogin: { userInfo },\n        } = getState();\n\n        const config = {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${userInfo.token}`,\n          },\n        };\n\n        const { data } = await axios.put(\n          `${process.env.REACT_APP_END_POINT}api/auth/user/${formData.id}`,\n          formData,\n          config,\n        );\n        dispatch({\n          type: USER_UPDATE_USER_ADMIN_DETAILS_SUCCESS,\n          payload: data,\n        });\n        dispatch(userAdminDetailsAction());\n      }\n    } catch (error) {\n      dispatch({\n        type: USER_UPDATE_USER_ADMIN_DETAILS_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nimport { userResetPasswordAction } from '../../store/actions/userActions';\n\nimport InputComponent from '../../components/Input/InputComponent';\nimport ButtonComponent from '../../components/Button/ButtonComponent';\nimport SpinnerComponent from '../../components/Spinner/SpinnerComponent';\nimport ErrorComponent from '../../components/ErrorComponent/ErrorComponent';\nimport SuccessComponent from '../../components/Success/SuccessComponent';\n\nconst PWResetView = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n  const [password, setPassword] = useState('');\n\n  const userResetPassword = useSelector((state) => state.userResetPassword);\n  const { loading, error, success } = userResetPassword;\n\n  const handleOnChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLoginSubmit = (e) => {\n    e.preventDefault();\n    //Dispatch action\n    dispatch(\n      userResetPasswordAction({\n        password: password,\n        resetPasswordToken: params.token,\n      }),\n    );\n    setPassword('');\n    setTimeout(() => {\n      navigate('/login');\n    }, 6000);\n  };\n\n  return (\n    <>\n      {error ? <ErrorComponent error={error} /> : null}\n      {success ? (\n        <SuccessComponent message=\"Password was successfully changed. You will be routed shortly\" />\n      ) : null}\n      {loading ? (\n        <SpinnerComponent />\n      ) : (\n        <fieldset className=\"fieldSet\">\n          <legend>Reset Password</legend>\n          <div>\n            <form onSubmit={handleLoginSubmit}>\n              <InputComponent\n                label=\"New Password\"\n                value={password}\n                type=\"password\"\n                name=\"password\"\n                required\n                className={password.length <= 5 ? 'invalid' : 'entered'}\n                error={\n                  password.length <= 5 && password.length !== 0\n                    ? `Password must contain at least 6 characters`\n                    : null\n                }\n                onChange={handleOnChange}\n              />\n\n              <ButtonComponent\n                type=\"submit\"\n                text=\"submit\"\n                variant=\"primary\"\n                disabled={password.length <= 5}\n              />\n            </form>\n          </div>\n        </fieldset>\n      )}\n    </>\n  );\n};\n\nexport default PWResetView;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ButtonComponent","id","type","text","onClick","variant","disabled","className","defaultProps","error","InputComponent","label","name","value","placeholder","onChange","inputFocus","useRef","useState","showPassword","setShowPassword","onlyPassword","setOnlyPassword","useEffect","current","focus","htmlFor","prevState","title","ref","PropTypes","message","clear","setClear","interval","setTimeout","clearInterval","userRegistrationAction","formData","dispatch","USER_REGISTER_REQUEST","config","headers","axios","process","data","USER_REGISTER_SUCCESS","payload","USER_REGISTER_FAILURE","response","userAdminDetailsAction","getState","USER_ADMIN_DETAILS_REQUEST","userLogin","userInfo","Authorization","token","USER_ADMIN_DETAILS_SUCCESS","googleUserLogin","USER_ADMIN_DETAILS_FAILURE","userLoginAction","email","password","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","localStorage","setItem","JSON","stringify","USER_LOGIN_FAILURE","googleUserLoginAction","googleRes","GOOGLE_USER_LOGIN_REQUEST","credential","GOOGLE_USER_LOGIN_SUCCESS","GOOGLE_USER_LOGIN_FAILURE","userLogoutAction","removeItem","USER_LOGOUT","GOOGLE_USER_LOGOUT","userForgotEmailAction","USER_FORGOT_EMAIL_REQUEST","USER_FORGOT_EMAIL_SUCCESS","USER_FORGOT_EMAIL_FAILURE","userResetPasswordAction","updatedInfo","USER_RESET_PASSWORD_REQUEST","resetPasswordToken","USER_RESET_PASSWORD_SUCCESS","USER_RESET_PASSWORD_FAILURE","userUpdateAdminDetailsAction","USER_UPDATE_USER_ADMIN_DETAILS_REQUEST","USER_UPDATE_USER_ADMIN_DETAILS_SUCCESS","USER_UPDATE_USER_ADMIN_DETAILS_FAILURE","useDispatch","navigate","useNavigate","params","useParams","setPassword","userResetPassword","useSelector","state","loading","success","onSubmit","e","preventDefault","required","length","target","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}