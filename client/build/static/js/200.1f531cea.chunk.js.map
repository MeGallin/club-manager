{"version":3,"file":"static/js/200.1f531cea.chunk.js","mappings":"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","sources":["store/actions/adminGeneralInfoActions.js","components/GeneralInfoComponent/AdminEditGeneralInfoComponent/AdminEditGeneralInfoComponent.jsx","components/GeneralInfoComponent/AdminDeleteGeneralInfoComponent/AdminDeleteGeneralInfoComponent.jsx","components/GeneralInfoComponent/AdminCreateGeneralInfoComponent/AdminCreateGeneralInfoComponent.jsx","components/GeneralInfoComponent/AdminGetGeneralInfoComponent/AdminGetGeneralInfoComponent.jsx"],"sourcesContent":["import axios from 'axios';\nimport {\n  ADMIN_CREATE_GENERAL_INFO_FAILURE,\n  ADMIN_CREATE_GENERAL_INFO_REQUEST,\n  ADMIN_CREATE_GENERAL_INFO_SUCCESS,\n  ADMIN_DELETE_GENERAL_INFO_FAILURE,\n  ADMIN_DELETE_GENERAL_INFO_REQUEST,\n  ADMIN_DELETE_GENERAL_INFO_SUCCESS,\n  ADMIN_EDIT_GENERAL_INFO_FAILURE,\n  ADMIN_EDIT_GENERAL_INFO_REQUEST,\n  ADMIN_EDIT_GENERAL_INFO_SUCCESS,\n  ADMIN_GET_GENERAL_INFO_FAILURE,\n  ADMIN_GET_GENERAL_INFO_REQUEST,\n  ADMIN_GET_GENERAL_INFO_SUCCESS,\n} from '../constants/adminGeneralInfoConstants';\n\n//GET: ADMIN get PLAYER profile\nexport const adminGetGeneralInfoAction = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADMIN_GET_GENERAL_INFO_REQUEST,\n    });\n\n    if (getState().userLogin.userInfo) {\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      const { data } = await axios.get(\n        `${process.env.REACT_APP_END_POINT}api/admin/general-info`,\n        config,\n      );\n      dispatch({ type: ADMIN_GET_GENERAL_INFO_SUCCESS, payload: data });\n    }\n\n    if (getState().googleUserLogin.userInfo) {\n      const {\n        googleUserLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `${process.env.REACT_APP_END_POINT}api/admin/general-info`,\n        config,\n      );\n      dispatch({ type: ADMIN_GET_GENERAL_INFO_SUCCESS, payload: data });\n    }\n  } catch (error) {\n    dispatch({\n      type: ADMIN_GET_GENERAL_INFO_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//POST: ADMIN create General info POST\nexport const adminCreateGeneralInfoAction =\n  (formData) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ADMIN_CREATE_GENERAL_INFO_REQUEST,\n      });\n      const {\n        userLogin: { userInfo },\n      } = getState();\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `${process.env.REACT_APP_END_POINT}api/admin/general-info-create`,\n        formData,\n        config,\n      );\n      dispatch({ type: ADMIN_CREATE_GENERAL_INFO_SUCCESS, payload: data });\n      dispatch(adminGetGeneralInfoAction());\n    } catch (error) {\n      dispatch({\n        type: ADMIN_CREATE_GENERAL_INFO_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n//PUT: ADMIN EDIT General info POST\nexport const adminEditGeneralInfoAction =\n  (formData) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ADMIN_EDIT_GENERAL_INFO_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `${process.env.REACT_APP_END_POINT}api/admin/general-info-edit/${formData.id}`,\n        formData,\n        config,\n      );\n      dispatch({ type: ADMIN_EDIT_GENERAL_INFO_SUCCESS, payload: data });\n      dispatch(adminGetGeneralInfoAction());\n    } catch (error) {\n      dispatch({\n        type: ADMIN_EDIT_GENERAL_INFO_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n//DELETE: ADMIN Delete General info POST\nexport const adminDeleteGeneralInfoAction =\n  (postId) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ADMIN_DELETE_GENERAL_INFO_REQUEST,\n      });\n      const {\n        userLogin: { userInfo },\n      } = getState();\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.delete(\n        `${process.env.REACT_APP_END_POINT}api/admin/general-info-delete/${postId}`,\n        config,\n      );\n      dispatch({ type: ADMIN_DELETE_GENERAL_INFO_SUCCESS, payload: data });\n      dispatch(adminGetGeneralInfoAction());\n    } catch (error) {\n      dispatch({\n        type: ADMIN_DELETE_GENERAL_INFO_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport InputComponent from '../../../components/Input/InputComponent';\nimport ButtonComponent from '../../../components/Button/ButtonComponent';\nimport ErrorComponent from '../../ErrorComponent/ErrorComponent';\nimport SuccessComponent from '../../Success/SuccessComponent';\n\nimport { nameRegEx } from '../../../utils/regEx';\nimport TextAreaComponent from '../../TextArea/TextAreaComponent';\nimport { adminEditGeneralInfoAction } from '../../../store/actions/adminGeneralInfoActions';\n\nfunction AdminEditGeneralInfoComponent({ postId }) {\n  const dispatch = useDispatch();\n\n  const adminGetGeneralInfo = useSelector((state) => state.adminGetGeneralInfo);\n  const { posts } = adminGetGeneralInfo;\n\n  const filteredPost = posts?.filter((post) => {\n    if (post._id === postId) {\n      return post;\n    }\n    return false;\n  });\n\n  const [formData, setFormData] = useState({\n    id: postId,\n    name: filteredPost[0].name,\n    heading: filteredPost[0].heading,\n    post: filteredPost[0].post,\n  });\n\n  const { name, heading, post } = formData;\n\n  const handleOnChange = (e) => {\n    setFormData((previousState) => ({\n      ...previousState,\n      [e.name]: e.value,\n    }));\n  };\n\n  const handleEditGeneralInfoSubmit = (e) => {\n    e.preventDefault();\n    // If this component is part of a view then make checks if admin and if user\n    //Dispatch your CREATE action\n    dispatch(adminEditGeneralInfoAction(formData));\n    setFormData({\n      name: '',\n      heading: '',\n      post: '',\n    });\n  };\n\n  const adminEditGeneralInfo = useSelector(\n    (state) => state.adminEditGeneralInfo,\n  );\n  const { success, error } = adminEditGeneralInfo;\n\n  return (\n    <>\n      {error ? <ErrorComponent error={error} /> : null}\n      {success ? (\n        <SuccessComponent message={'Your profile was successfully created'} />\n      ) : null}\n      <fieldset className=\"fieldSet\">\n        <legend>Edit General Info Post</legend>\n        <div>\n          <form onSubmit={handleEditGeneralInfoSubmit}>\n            <InputComponent\n              label=\"Name\"\n              value={name}\n              type=\"text\"\n              name=\"name\"\n              required\n              className={!nameRegEx.test(name) ? 'invalid' : 'entered'}\n              error={\n                !nameRegEx.test(name) && name.length !== 0\n                  ? `Name must contain at least 5 characters`\n                  : null\n              }\n              onChange={(e) => handleOnChange(e.target)}\n            />\n\n            <InputComponent\n              label=\"Heading\"\n              value={heading}\n              type=\"text\"\n              name=\"heading\"\n              required\n              className={!nameRegEx.test(heading) ? 'invalid' : 'entered'}\n              error={\n                !nameRegEx.test(heading) && heading?.length !== 0\n                  ? `Please choose a number between 1 and 100`\n                  : null\n              }\n              onChange={(e) => handleOnChange(e.target)}\n            />\n            <TextAreaComponent\n              label=\"Post\"\n              id=\"post\"\n              name=\"post\"\n              value={post}\n              error={\n                post.length <= 15 && post?.length !== 0\n                  ? `Description must contain at least 16 characters`\n                  : null\n              }\n              onChange={(e) => handleOnChange(e.target)}\n            />\n\n            <ButtonComponent\n              type=\"submit\"\n              text={\n                !nameRegEx.test(name) || post.length <= 15\n                  ? 'Disabled'\n                  : 'submit'\n              }\n              variant=\"primary\"\n              disabled={!nameRegEx.test(name) || post.length <= 15}\n            />\n          </form>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default AdminEditGeneralInfoComponent;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport './AdminDeleteGeneralInfoComponent.scss';\n\nimport { adminDeleteGeneralInfoAction } from '../../../store/actions/adminGeneralInfoActions';\n\nimport ButtonComponent from '../../Button/ButtonComponent';\nimport SpinnerComponent from '../../Spinner/SpinnerComponent';\nimport ErrorComponent from '../../ErrorComponent/ErrorComponent';\nimport ModalComponent from '../../ModalComponent/ModalComponent';\n\nconst AdminDeleteGeneralInfoComponent = ({ postId, postTitle }) => {\n  const dispatch = useDispatch();\n  const handleGeneralInfoDelete = () => {\n    //Action Delete player\n    dispatch(adminDeleteGeneralInfoAction(postId));\n  };\n  const adminDeleteGeneralInfo = useSelector(\n    (state) => state.adminDeleteGeneralInfo,\n  );\n  const { loading, error } = adminDeleteGeneralInfo;\n  return (\n    <>\n      {error ? <ErrorComponent error={error} /> : null}\n\n      {loading ? (\n        <SpinnerComponent />\n      ) : (\n        <>\n          <ModalComponent\n            className=\"create-btn\"\n            openButtonTitle=\"Delete Profile\"\n            closeButtonTitle=\"No thanks\"\n            variant=\"danger\"\n            props={\n              <>\n                <div>\n                  <span>Are you sure you want to delete post titled?</span>{' '}\n                  <h3>{postTitle}</h3>\n                </div>\n                <ButtonComponent\n                  type=\"submit\"\n                  text=\"Yes Delete Profile\"\n                  variant=\"danger\"\n                  disabled={false}\n                  onClick={handleGeneralInfoDelete}\n                />\n              </>\n            }\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AdminDeleteGeneralInfoComponent;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminCreateGeneralInfoComponent.scss';\n\nimport { adminCreateGeneralInfoAction } from '../../../store/actions/adminGeneralInfoActions';\n\nimport InputComponent from '../../../components/Input/InputComponent';\nimport ButtonComponent from '../../../components/Button/ButtonComponent';\nimport ErrorComponent from '../../ErrorComponent/ErrorComponent';\nimport SuccessComponent from '../../Success/SuccessComponent';\nimport TextAreaComponent from '../../TextArea/TextAreaComponent';\nimport { nameRegEx } from '../../../utils/regEx';\n\nconst AdminCreateGeneralInfoComponent = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const googleUserLogin = useSelector((state) => state.googleUserLogin);\n  const { userInfo: googleUserInfo } = googleUserLogin;\n  const userAdminDetails = useSelector((state) => state.userAdminDetails);\n  const { userAdmin } = userAdminDetails;\n\n  const [formData, setFormData] = useState({\n    name: '',\n    heading: '',\n    post: '',\n  });\n\n  const { name, heading, post } = formData;\n\n  const handleOnChange = (e) => {\n    setFormData((previousState) => ({\n      ...previousState,\n      [e.name]: e.value,\n    }));\n  };\n\n  const handleCreateGeneralInfoSubmit = (e) => {\n    e.preventDefault();\n    if (!userInfo || (!googleUserInfo && !userAdmin?.isAdmin)) {\n      navigate('/login');\n    } else {\n      //Dispatch your CREATE action\n      dispatch(adminCreateGeneralInfoAction(formData));\n      setFormData({\n        name: '',\n        heading: '',\n        post: '',\n      });\n    }\n  };\n\n  const adminCreateGeneralInfo = useSelector(\n    (state) => state.adminCreateGeneralInfo,\n  );\n  const { error, success } = adminCreateGeneralInfo;\n\n  return (\n    <>\n      {error ? <ErrorComponent error={error} /> : null}\n      {success ? (\n        <SuccessComponent message={'Your profile was successfully created'} />\n      ) : null}\n\n      <fieldset className=\"fieldSet\">\n        <legend>Create General Info Post</legend>\n        <div>\n          <form onSubmit={handleCreateGeneralInfoSubmit}>\n            <InputComponent\n              label=\"Name\"\n              value={name}\n              type=\"text\"\n              name=\"name\"\n              required\n              className={!nameRegEx.test(name) ? 'invalid' : 'entered'}\n              error={\n                !nameRegEx.test(name) && name.length !== 0\n                  ? `Name must contain at least 5 characters`\n                  : null\n              }\n              onChange={(e) => handleOnChange(e.target)}\n            />\n\n            <InputComponent\n              label=\"Heading\"\n              value={heading}\n              type=\"text\"\n              name=\"heading\"\n              required\n              className={!nameRegEx.test(heading) ? 'invalid' : 'entered'}\n              error={\n                !nameRegEx.test(heading) && heading?.length !== 0\n                  ? `Please choose a number between 1 and 100`\n                  : null\n              }\n              onChange={(e) => handleOnChange(e.target)}\n            />\n            <TextAreaComponent\n              label=\"Post\"\n              id=\"post\"\n              name=\"post\"\n              value={post}\n              error={\n                post.length <= 15 && post?.length !== 0\n                  ? `Description must contain at least 16 characters`\n                  : null\n              }\n              onChange={(e) => handleOnChange(e.target)}\n            />\n\n            <ButtonComponent\n              type=\"submit\"\n              text={\n                !nameRegEx.test(name) || post.length <= 15\n                  ? 'Disabled'\n                  : 'submit'\n              }\n              variant=\"primary\"\n              disabled={!nameRegEx.test(name) || post.length <= 15}\n            />\n          </form>\n        </div>\n      </fieldset>\n    </>\n  );\n};\n\nexport default AdminCreateGeneralInfoComponent;\n","import { useEffect, useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\n\nimport './AdminGetGeneralInfoComponent.scss';\nimport { adminGetGeneralInfoAction } from '../../../store/actions/adminGeneralInfoActions';\nimport ErrorComponent from '../../ErrorComponent/ErrorComponent';\nimport SpinnerComponent from '../../Spinner/SpinnerComponent';\nimport ModalComponent from '../../ModalComponent/ModalComponent';\nimport AdminEditGeneralInfoComponent from '../AdminEditGeneralInfoComponent/AdminEditGeneralInfoComponent';\nimport AdminDeleteGeneralInfoComponent from '../AdminDeleteGeneralInfoComponent/AdminDeleteGeneralInfoComponent';\nimport SearchComponent from '../../SearchComponent/SearchComponent';\nimport ButtonComponent from '../../Button/ButtonComponent';\nimport AdminCreateGeneralInfoComponent from '../AdminCreateGeneralInfoComponent/AdminCreateGeneralInfoComponent';\nimport SearchHighlightComponent from '../../SearchHighlightComponent/SearchHighlightComponent';\n\nconst AdminGetGeneralInfoComponent = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const googleUserLogin = useSelector((state) => state.googleUserLogin);\n  const { userInfo: googleUserInfo } = googleUserLogin;\n  const userAdminDetails = useSelector((state) => state.userAdminDetails);\n  const { userAdmin } = userAdminDetails;\n\n  useEffect(() => {\n    let ignore = false;\n    if (!userInfo && !googleUserInfo && !userAdmin?.isAdmin) {\n      navigate('/login');\n    } else {\n      if (!ignore) dispatch(adminGetGeneralInfoAction());\n    }\n    return () => (ignore = true);\n  }, [navigate, dispatch, userInfo, userAdmin, googleUserInfo]);\n\n  const adminGetGeneralInfo = useSelector((state) => state.adminGetGeneralInfo);\n  const { loading, success, error, posts } = adminGetGeneralInfo;\n\n  // Search posts\n  const [keyword, setKeyword] = useState('');\n  const handleSearch = (e) => {\n    setKeyword(e.target.value);\n  };\n  const searchedPosts = posts?.filter((post) => {\n    if (\n      post.heading.toLowerCase().includes(keyword.toLowerCase()) ||\n      post.post.toLowerCase().includes(keyword.toLowerCase())\n    ) {\n      return post;\n    }\n    return false;\n  });\n\n  return (\n    <div>\n      {error ? <ErrorComponent error={error} /> : null}\n      <h2>General Notices</h2>\n      <div className=\"admin-get-player__top-wrapper\">\n        {userAdmin?.isAdmin ? (\n          <ModalComponent\n            className=\"create-btn\"\n            openButtonTitle=\"Create A NEW POST\"\n            closeButtonTitle=\"Close modal\"\n            variant=\"success\"\n            props={\n              <>\n                <AdminCreateGeneralInfoComponent />\n              </>\n            }\n          />\n        ) : null}\n        <SearchComponent\n          placeholder=\"SEARCH POST\"\n          value={keyword}\n          onChange={handleSearch}\n          quantity={searchedPosts?.length}\n          total={posts?.length}\n        />\n\n        {userAdmin?.isAdmin ? (\n          <ButtonComponent\n            type=\"button\"\n            text={\n              <NavLink\n                className={(navData) => (navData.isActive ? 'active' : '')}\n                to=\"/admin-profile\"\n              >\n                Go Back\n              </NavLink>\n            }\n            variant=\"info\"\n            disabled={false}\n          />\n        ) : null}\n      </div>\n\n      {loading ? (\n        <SpinnerComponent />\n      ) : success && searchedPosts ? (\n        <div className=\"wrapper\">\n          {searchedPosts?.map((post) => (\n            <div key={post._id} className=\"inner-content-wrapper\">\n              <div>\n                <fieldset className=\"fieldSet\">\n                  <legend>\n                    <SearchHighlightComponent\n                      value={post.heading}\n                      keyword={keyword}\n                    />\n                  </legend>\n\n                  <SearchHighlightComponent\n                    value={post.post}\n                    keyword={keyword}\n                  />\n\n                  <p className=\"small-text\">BY: {post.name}</p>\n                  {userAdmin?.isAdmin ? (\n                    <div className=\"button-wrapper\">\n                      <ModalComponent\n                        className=\"create-btn\"\n                        openButtonTitle=\"Edit Post\"\n                        closeButtonTitle=\"Close modal\"\n                        variant=\"warning\"\n                        props={\n                          <>\n                            <AdminEditGeneralInfoComponent postId={post._id} />\n                          </>\n                        }\n                      />\n\n                      <AdminDeleteGeneralInfoComponent\n                        postId={post._id}\n                        postTitle={post.heading}\n                      />\n                    </div>\n                  ) : null}\n                  <div className=\"dates-wrapper\">\n                    <p> Created: {moment(post.createdAt).fromNow()}</p>\n                    <p> Updated: {moment(post.updatedAt).fromNow()}</p>\n                  </div>\n                </fieldset>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AdminGetGeneralInfoComponent;\n"],"names":["adminGetGeneralInfoAction","dispatch","getState","type","ADMIN_GET_GENERAL_INFO_REQUEST","userLogin","userInfo","config","headers","Authorization","token","axios","process","data","ADMIN_GET_GENERAL_INFO_SUCCESS","payload","googleUserLogin","ADMIN_GET_GENERAL_INFO_FAILURE","response","message","postId","useDispatch","posts","useSelector","state","adminGetGeneralInfo","filteredPost","filter","post","_id","useState","id","name","heading","formData","setFormData","handleOnChange","e","previousState","value","adminEditGeneralInfo","success","error","ErrorComponent","SuccessComponent","className","onSubmit","preventDefault","ADMIN_EDIT_GENERAL_INFO_REQUEST","ADMIN_EDIT_GENERAL_INFO_SUCCESS","ADMIN_EDIT_GENERAL_INFO_FAILURE","adminEditGeneralInfoAction","InputComponent","label","required","nameRegEx","length","onChange","target","TextAreaComponent","ButtonComponent","text","variant","disabled","postTitle","adminDeleteGeneralInfo","loading","SpinnerComponent","ModalComponent","openButtonTitle","closeButtonTitle","props","onClick","ADMIN_DELETE_GENERAL_INFO_REQUEST","ADMIN_DELETE_GENERAL_INFO_SUCCESS","ADMIN_DELETE_GENERAL_INFO_FAILURE","adminDeleteGeneralInfoAction","navigate","useNavigate","googleUserInfo","userAdmin","userAdminDetails","adminCreateGeneralInfo","isAdmin","ADMIN_CREATE_GENERAL_INFO_REQUEST","ADMIN_CREATE_GENERAL_INFO_SUCCESS","ADMIN_CREATE_GENERAL_INFO_FAILURE","adminCreateGeneralInfoAction","useEffect","ignore","keyword","setKeyword","searchedPosts","toLowerCase","includes","SearchComponent","placeholder","quantity","total","navData","isActive","to","map","SearchHighlightComponent","moment","createdAt","fromNow","updatedAt"],"sourceRoot":""}