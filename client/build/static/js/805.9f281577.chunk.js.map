{"version":3,"file":"static/js/805.9f281577.chunk.js","mappings":"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","sources":["components/LogoutComponent/LogoutComponent.jsx","components/Header/HeaderComponent.jsx","components/LogoComponent/LogoComponent.jsx","store/actions/userActions.js"],"sourcesContent":["import './LogoutComponent.scss';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { userLogoutAction } from '../../store/actions/userActions';\n\nconst LogoutComponent = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    dispatch(userLogoutAction());\n\n    navigate('/login');\n  };\n  return (\n    <div className=\"link-effect\" onClick={handleLogout}>\n      LOG OUT\n    </div>\n  );\n};\n\nexport default LogoutComponent;\n","import { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport './HeaderComponent.scss';\n\nimport LogoutComponent from '../LogoutComponent/LogoutComponent';\nimport LogoComponent from '../LogoComponent/LogoComponent';\n\nconst HeaderComponent = () => {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const googleUserLogin = useSelector((state) => state.googleUserLogin);\n  const { userInfo: googleUserInfo } = googleUserLogin;\n\n  const userAdminDetails = useSelector((state) => state.userAdminDetails);\n  const { userAdmin } = userAdminDetails;\n\n  return (\n    <>\n      <header>\n        <NavLink\n          className={(navData) => (navData.isActive ? 'active' : '')}\n          to=\"/home\"\n        >\n          <LogoComponent />\n        </NavLink>\n\n        <nav className=\"nav-wrapper\">\n          {userInfo || googleUserInfo ? (\n            <>\n              {userAdmin?.isAdmin ? (\n                <>\n                  <span>\n                    <NavLink\n                      className={(navData) =>\n                        navData.isActive ? 'active' : ''\n                      }\n                      to=\"/admin-profile\"\n                    >\n                      <div className=\"logged-in-user-wrapper\">\n                        <div className=\"logged-in-user\">\n                          {userAdmin?.username}\n                        </div>\n                      </div>\n                    </NavLink>\n                  </span>\n                  <span>\n                    <LogoutComponent />\n                  </span>\n                </>\n              ) : (\n                <>\n                  <span>\n                    <NavLink\n                      className={(navData) =>\n                        navData.isActive ? 'active' : ''\n                      }\n                      to=\"/user-admin\"\n                    >\n                      <div className=\"logged-in-user-wrapper\">\n                        <div className=\"logged-in-user\">\n                          {userAdmin?.username}\n                        </div>\n                      </div>\n                    </NavLink>\n                  </span>\n                  <span>\n                    <LogoutComponent />\n                  </span>\n                </>\n              )}\n            </>\n          ) : (\n            <>\n              <span>\n                <NavLink\n                  className={(navData) => (navData.isActive ? 'active' : '')}\n                  to=\"/about\"\n                >\n                  About\n                </NavLink>\n              </span>\n              <span>\n                <NavLink\n                  className={(navData) => (navData.isActive ? 'active' : '')}\n                  to=\"/contact\"\n                >\n                  Contact\n                </NavLink>\n              </span>\n              <span>\n                <NavLink\n                  className={(navData) => (navData.isActive ? 'active' : '')}\n                  to=\"/login\"\n                >\n                  Login\n                </NavLink>\n              </span>\n            </>\n          )}\n        </nav>\n      </header>\n    </>\n  );\n};\n\nexport default HeaderComponent;\n","import './LogoComponent.scss';\nimport logo from '../../assets/club-manager-logo.png';\n\nconst LogoComponent = () => {\n  return (\n    <>\n      <div className=\"logo-wrapper\">\n        <img src={logo} alt=\"logo\" className=\"logo-image\" />\n        <div>\n          <span className=\"logo-main-text\">Anorthosis</span>\n          <div className=\"logo-secondary-text\">Football Academy</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LogoComponent;\n","import axios from 'axios';\nimport {\n  GOOGLE_USER_LOGIN_FAILURE,\n  GOOGLE_USER_LOGIN_REQUEST,\n  GOOGLE_USER_LOGIN_SUCCESS,\n  GOOGLE_USER_LOGOUT,\n  USER_ADMIN_DETAILS_FAILURE,\n  USER_ADMIN_DETAILS_REQUEST,\n  USER_ADMIN_DETAILS_SUCCESS,\n  USER_FORGOT_EMAIL_FAILURE,\n  USER_FORGOT_EMAIL_REQUEST,\n  USER_FORGOT_EMAIL_SUCCESS,\n  USER_LOGIN_FAILURE,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAILURE,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_RESET_PASSWORD_FAILURE,\n  USER_RESET_PASSWORD_REQUEST,\n  USER_RESET_PASSWORD_SUCCESS,\n  USER_UPDATE_USER_ADMIN_DETAILS_FAILURE,\n  USER_UPDATE_USER_ADMIN_DETAILS_REQUEST,\n  USER_UPDATE_USER_ADMIN_DETAILS_SUCCESS,\n} from '../constants/userConstants';\n\n// USER Registration Done\nexport const userRegistrationAction = (formData) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      `${process.env.REACT_APP_END_POINT}api/auth/register`,\n      formData,\n      config,\n    );\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//GET: USER Admin details Done\nexport const userAdminDetailsAction = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_ADMIN_DETAILS_REQUEST,\n    });\n\n    if (getState().userLogin.userInfo) {\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      const { data } = await axios.get(\n        `${process.env.REACT_APP_END_POINT}api/auth/user-admin-details`,\n        config,\n      );\n      dispatch({ type: USER_ADMIN_DETAILS_SUCCESS, payload: data });\n    }\n\n    if (getState().googleUserLogin.userInfo) {\n      const {\n        googleUserLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `${process.env.REACT_APP_END_POINT}api/auth/user-admin-details`,\n        config,\n      );\n      dispatch({ type: USER_ADMIN_DETAILS_SUCCESS, payload: data });\n    }\n  } catch (error) {\n    dispatch({\n      type: USER_ADMIN_DETAILS_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//User Login Done\nexport const userLoginAction = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      `${process.env.REACT_APP_END_POINT}api/auth/login`,\n      { email: email, password: password },\n      config,\n    );\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch(userAdminDetailsAction());\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//GOOGLE User Login\nexport const googleUserLoginAction = (googleRes) => async (dispatch) => {\n  try {\n    dispatch({\n      type: GOOGLE_USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${googleRes.credential}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `${process.env.REACT_APP_END_POINT}api/auth/google-login`,\n      config,\n    );\n\n    dispatch({ type: GOOGLE_USER_LOGIN_SUCCESS, payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch(userAdminDetailsAction());\n  } catch (error) {\n    dispatch({\n      type: GOOGLE_USER_LOGIN_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// USER USER_LOGOUT Done\nexport const userLogoutAction = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: GOOGLE_USER_LOGOUT });\n};\n\n//User FORGOT EMAIL ACTION Done\nexport const userForgotEmailAction = (email) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_FORGOT_EMAIL_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      `${process.env.REACT_APP_END_POINT}api/auth/forgot-password`,\n      { email: email },\n      config,\n    );\n    dispatch({ type: USER_FORGOT_EMAIL_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_FORGOT_EMAIL_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//User Login Done\nexport const userResetPasswordAction = (updatedInfo) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_RESET_PASSWORD_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.put(\n      `${process.env.REACT_APP_END_POINT}api/auth/resetpassword/${updatedInfo.resetPasswordToken}`,\n      updatedInfo,\n      config,\n    );\n    dispatch({ type: USER_RESET_PASSWORD_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_RESET_PASSWORD_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//GET: USER UPDATE Admin details Done\nexport const userUpdateAdminDetailsAction =\n  (formData) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_UPDATE_USER_ADMIN_DETAILS_REQUEST,\n      });\n\n      if (getState().userLogin.userInfo) {\n        const {\n          userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${userInfo.token}`,\n          },\n        };\n        const { data } = await axios.put(\n          `${process.env.REACT_APP_END_POINT}api/auth/user/${formData.id}`,\n          formData,\n          config,\n        );\n        dispatch({\n          type: USER_UPDATE_USER_ADMIN_DETAILS_SUCCESS,\n          payload: data,\n        });\n        dispatch(userAdminDetailsAction());\n      }\n\n      if (getState().googleUserLogin.userInfo) {\n        const {\n          googleUserLogin: { userInfo },\n        } = getState();\n\n        const config = {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${userInfo.token}`,\n          },\n        };\n\n        const { data } = await axios.put(\n          `${process.env.REACT_APP_END_POINT}api/auth/user/${formData.id}`,\n          formData,\n          config,\n        );\n        dispatch({\n          type: USER_UPDATE_USER_ADMIN_DETAILS_SUCCESS,\n          payload: data,\n        });\n        dispatch(userAdminDetailsAction());\n      }\n    } catch (error) {\n      dispatch({\n        type: USER_UPDATE_USER_ADMIN_DETAILS_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n"],"names":["navigate","useNavigate","dispatch","useDispatch","className","onClick","userLogoutAction","userInfo","useSelector","state","userLogin","googleUserInfo","googleUserLogin","userAdmin","userAdminDetails","navData","isActive","to","LogoComponent","isAdmin","username","src","logo","alt","userRegistrationAction","formData","type","USER_REGISTER_REQUEST","config","headers","axios","process","data","USER_REGISTER_SUCCESS","payload","USER_REGISTER_FAILURE","response","message","userAdminDetailsAction","getState","USER_ADMIN_DETAILS_REQUEST","Authorization","token","USER_ADMIN_DETAILS_SUCCESS","USER_ADMIN_DETAILS_FAILURE","userLoginAction","email","password","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","localStorage","setItem","JSON","stringify","USER_LOGIN_FAILURE","googleUserLoginAction","googleRes","GOOGLE_USER_LOGIN_REQUEST","credential","GOOGLE_USER_LOGIN_SUCCESS","GOOGLE_USER_LOGIN_FAILURE","removeItem","USER_LOGOUT","GOOGLE_USER_LOGOUT","userForgotEmailAction","USER_FORGOT_EMAIL_REQUEST","USER_FORGOT_EMAIL_SUCCESS","USER_FORGOT_EMAIL_FAILURE","userResetPasswordAction","updatedInfo","USER_RESET_PASSWORD_REQUEST","resetPasswordToken","USER_RESET_PASSWORD_SUCCESS","USER_RESET_PASSWORD_FAILURE","userUpdateAdminDetailsAction","USER_UPDATE_USER_ADMIN_DETAILS_REQUEST","id","USER_UPDATE_USER_ADMIN_DETAILS_SUCCESS","USER_UPDATE_USER_ADMIN_DETAILS_FAILURE"],"sourceRoot":""}